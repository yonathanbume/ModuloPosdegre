@using AKDEMIC.INTRANET.Areas.Teacher.Models.GradeViewModels
@model DetailViewModel

@{
    ViewData["Title"] = "Registro de Notas";
    ViewData["Breadcrumbs"] = new[] {
new BreadcrumbViewData { Name = "Registro de Notas", Controller = "Grade", Action = "Index", Area = "Teacher"},
new BreadcrumbViewData { Name = "Detalle", Controller = null, Action = null}
};
    ViewData["BackUrl"] = Url.Action("Index", "Grade");
}

@section Styles{
    <style>
        .bg-dpi {
            background-color: #f3b2b2 !important;
            color: black !important;
        }
    </style>
}

<input type="hidden" asp-for="SectionId" />
<div class="m-content">
    <div class="m-alert m-alert--icon m-alert--air m-alert--square alert alert-dismissible m--margin-bottom-30" role="alert">
        <div class="m-alert__icon">
            <i class="flaticon-exclamation m--font-brand"></i>
        </div>
        <div class="m-alert__text">
            Listado de estudiantes de la secci&oacute;n y sus notas registradas a la fecha, para ingresar una nueva nota deber&aacute; hacer clic en el s&iacute;mbolo (<b>+</b>) al lado de la evaluaci&oacute;n.
            <br />Una vez ingresada una nota, esta no podr&aacute; ser modificada sin autorizaci&oacute;n del administrador o persona encargada.
        </div>
    </div>

    <div class="m-portlet">
        <div class="m-portlet__head">
            <div class="m-portlet__head-caption">
                <div class="m-portlet__head-title">
                    <h3 class="m-portlet__head-text">
                        Listado de notas por estudiante
                    </h3>
                </div>
            </div>

        </div>
        <div class="m-portlet__body">
            @*@if (Model.EvaluationReportGenerated)
            {
            <div class="m-alert m-alert--icon m-alert--air alert alert-primary alert-dismissible fade show" role="alert">
            <div class="m-alert__icon">
            <i class="la la-info-circle"></i>
            </div>
            <div class="m-alert__text">
            <strong>Acta emitida con c&oacute;digo @Model.EvaluationReportCode. Las notas no podrán ser modificadas.</strong>
            </div>
            </div>
            }*@
            @if (Model.Evaluations.Any(y => !y.Taken) && (Model.HasMeritOrder || Model.HasAcademicHistories))
            {
                <div class="m-alert m-alert--icon m-alert--air alert alert-primary alert-dismissible fade show" role="alert">
                    <div class="m-alert__icon">
                        <i class="la la-info-circle"></i>
                    </div>
                    <div class="m-alert__text">
                        <strong>No se podrá asignar las notas pendientes por los siguientes motivos:</strong><br />
                        @if (Model.HasMeritOrder)
                        {
                            <span>- Se encontraron alumnos con cuadro de m&eacute;rito asignado.</span>

                            <br />
                        }
                        @if (Model.HasAcademicHistories)
                        {
                            <span>- Se encontraron alumnos con historial acad&eacute;mico creado.</span>

                            <br />
                        }
                    </div>
                </div>
            }

            <div class="row mt-4 mb-3">
                <div class="col-6">
                    <div class="m-form__label"> Curso: &emsp;<span class="m--font-boldest">@Model.Course</span></div>
                </div>
                <div class="col-6">
                    <div class="m-form__label"> Secci&oacute;n: &emsp;<span class="m--font-boldest">@Model.Section</span></div>
                </div>
            </div>

            @if ((Model.GradesCanOnlyPublishedByPrincipalTeacher && Model.IsPrincipalTeacher) || (!Model.GradesCanOnlyPublishedByPrincipalTeacher))
            {
                @if (Model.EvaluationsByUnits && Model.EnableBulkSaveGrades)
                {
                    <div class="m-form m-form--label-align-right m--margin-top-20 m--margin-bottom-30">
                        <div class="row align-items-center form-group m-form__group">
                            <div class="col-sm-auto m-form__label"> Unidades : </div>
                            <div class="col-sm-8 m-form__control">
                                <select id="select_courseUnit" class="form-control m-bootstrap-select">
                                    <option></option>
                                    @foreach (var item in Model.CourseUnits)
                                    {
                                        <option value="@item.Id"> UNIDAD @item.Number (Sem. @(item.WeekStart) - Sem. @(item.WeekEnd))</option>
                                    }
                                </select>
                            </div>
                            <button id="btnRegister_unit" class="btn btn-primary">
                                Registrar
                            </button>
                        </div>
                    </div>
                }
                else
                {
                    @if (Model.Evaluations.Any(x => !x.Taken) && (!Model.HasMeritOrder && !Model.HasAcademicHistories))
                    {
                        <div class="m-form m-form--label-align-right m--margin-top-20 m--margin-bottom-30">
                            <div class="row align-items-center form-group m-form__group">
                                <div class="col-sm-auto m-form__label"> Evaluaci&oacute;n pendiente: </div>
                                <div class="col-sm-8 m-form__control">
                                    <select id="selEvaluation" class="form-control m-bootstrap-select">
                                        <option></option>
                                        @foreach (var item in Model.Evaluations.Where(x => x.Taken == false).ToList())
                                        {
                                            <option value="@item.Id"> @item.SelectName</option>
                                        }
                                    </select>
                                </div>
                                <button id="btnRegister" class="btn btn-primary"
                                        data-url="@Url.Action("Register","Grade", new { area = "Teacher", section = Model.SectionId, evaluation = "1" })">
                                    Registrar
                                </button>
                            </div>
                        </div>
                    }
                }
            }

            @if (Model.GradesCanOnlyPublishedByPrincipalTeacher)
            {
                <strong>*Solo los docentes principales podrán subir notas.</strong>
            }

            <table id="student-table" class="display nowrap table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th title="name">
                            #
                        </th>
                        <th title="name" width="10px">
                            C&oacute;digo
                        </th>
                        <th title="name" width="40%">
                            Estudiante
                        </th>
                        @foreach (var item in Model.Evaluations)
                        {
                            <th data-toggle="m-tooltip" title data-html="true" data-original-title="<p>Descripción</p><p>@item.Description</p>">
                                @item.TableName (@(item.Percentage.HasValue ? item.Percentage + "%" : "-"))
                                &nbsp;

                                @if (!item.Taken && !Model.HasAcademicHistories && !Model.HasMeritOrder && ((Model.GradesCanOnlyPublishedByPrincipalTeacher && Model.IsPrincipalTeacher) || (!Model.GradesCanOnlyPublishedByPrincipalTeacher)))
                                {
                                    <a asp-controller="Grade" asp-action="Register" asp-route-section="@Model.SectionId" asp-route-evaluation="@item.Id" class="m-link">
                                        <i class="la la-plus"></i>
                                    </a>
                                }
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @{
                        var index = 1;
                    }
                    @foreach (var item in Model.Students)
                    {


                        <tr @if (item.DPI)
                        {
                            @("class=bg-dpi")
                        }>

                            <td>
                                @index
                            </td>
                            <td>
                                @item.Code
                            </td>
                            <td>
                                @item.Name

                                @if (item.DPI)
                                {
                                    <i class="la la-info-circle" data-toggle="m-tooltip" data-placement="top" data-html="true" data-original-title="<strong>Desaprobado por Inasistencia</strong>"></i>
                                }
                            </td>
                            @foreach (var ev in item.Grades)
                            {
                                if (item.Withdrawn)
                                {
                                    <td>RET</td>
                                }
                                else
                                {
                                    <td>@((ev == -1.0M ? "---" : ev.ToString()))</td>
                                }
                            }
                        </tr>

                        index++;
                    }
                </tbody>
            </table>
        </div>
        <div class="m-portlet__foot">
            <div class="row align-items-center">
                <div class="col-lg-6 m--valign-middle">
                </div>
                <div class="col-lg-6 m--align-right">
                    @if (ConstantHelpers.Institution.UNAMAD != ConstantHelpers.GENERAL.Institution.Value)
                    {
                        @if (Model.AllEvaluationsWithGrades)
                        {
                            <button data-sectionId="@Model.SectionId" class="btn btn-brand btn-evaluation" target="_blank">Imprimir Registro de Evaluación</button>
                        }
                        else
                        {
                            <a class="btn btn-brand" target="_blank" asp-action="GetDetailsExcel" asp-controller="Grade" asp-area="Teacher" asp-route-sectionId="@Model.SectionId">Exportar Excel</a>

                        }
                    }
                    else
                    {
                        if (Model.AvailableToPrint)
                        {
                            <button data-sectionId="@Model.SectionId" class="btn btn-brand btn-evaluation-2" target="_blank">Imprimir Acta de Notas</button>
                        }
                        <span>&emsp;</span>
                        <button data-sectionId="@Model.SectionId" class="btn btn-brand btn-evaluation-detalle" target="_blank">Imprimir Acta Detallada</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var columns = @Html.Raw(Model.JsonColumns);
    </script>

    <script src="~/js/lib/jquery.fileDownload/jquery.fileDownload.min.js"></script>
    <script src="~/assets/plugins/datatables/datatables.bundle.js" type="text/javascript"></script>
    <script src="~/js/areas/teacher/grade/details.js"></script>
}