using System.Collections.Generic;
using System.Linq;
using AKDEMIC.ENTITIES.Models.TeachingManagement;

namespace AKDEMIC.REPOSITORY.Data.Seeds
{
    public class UnitActivitySeed
    {
        public static UnitActivity[] Seed(AkdemicContext apiContext)
        {
            List<ENTITIES.Models.Enrollment.CourseUnit> courseUnits = apiContext.CourseUnits.ToList();

            List<UnitActivity> result = new List<UnitActivity>()
            {
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 1, Name = "Definición de un Algoritmo" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 2, Name = "Partes de un Programa" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 1, Name = "Variables y Constantes" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 2, Name = "Tipos de Datos y Operadores" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 3, Order = 1, Name = "Instrucciones de Entrada y de Salida" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Estructuras de Control").Id, Week = 4, Order = 1, Name = "Estructuras de Control Selectivas: if-else" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Estructuras de Control").Id, Week = 5, Order = 1, Name = "Estructuras de Control Selectivas: switch" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Estructuras de Control").Id, Week = 6, Order = 1, Name = "Estructuras de Control Repetitivas: do-while" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Estructuras de Control").Id, Week = 7, Order = 1, Name = "Estructuras de Control Repetitivas: for" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Memoria Dinámica").Id, Week = 9, Order = 1, Name = "Operadores de Dirección e Indirección" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Memoria Dinámica").Id, Week = 10, Order = 1, Name = "Funciones con Parámetros por Referencia" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Arreglos").Id, Week = 12, Order = 1, Name = "Arreglos Unidimensionales" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Arreglos").Id, Week = 13, Order = 1, Name = "Métodos de Ordenamiento" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Arreglos").Id, Week = 14, Order = 1, Name = "Búsquedas" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-1" && cu.Name == "Arreglos").Id, Week = 15, Order = 1, Name = "Arreglos Bidimensionales" },

                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 1, Name = "Definición de un Algoritmo" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 2, Name = "Partes de un Programa" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 1, Name = "Variables y Constantes" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 2, Name = "Tipos de Datos y Operadores" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 3, Order = 1, Name = "Instrucciones de Entrada y de Salida" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Estructuras de Control").Id, Week = 4, Order = 1, Name = "Estructuras de Control Selectivas: if-else" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Estructuras de Control").Id, Week = 5, Order = 1, Name = "Estructuras de Control Selectivas: switch" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Estructuras de Control").Id, Week = 6, Order = 1, Name = "Estructuras de Control Repetitivas: do-while" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Estructuras de Control").Id, Week = 7, Order = 1, Name = "Estructuras de Control Repetitivas: for" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Memoria Dinámica").Id, Week = 9, Order = 1, Name = "Operadores de Dirección e Indirección" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Memoria Dinámica").Id, Week = 10, Order = 1, Name = "Funciones con Parámetros por Referencia" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Arreglos").Id, Week = 12, Order = 1, Name = "Arreglos Unidimensionales" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Arreglos").Id, Week = 13, Order = 1, Name = "Métodos de Ordenamiento" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Arreglos").Id, Week = 14, Order = 1, Name = "Búsquedas" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2018-2" && cu.Name == "Arreglos").Id, Week = 15, Order = 1, Name = "Arreglos Bidimensionales" },

                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 1, Name = "Definición de un Algoritmo" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 2, Name = "Partes de un Programa" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 1, Name = "Variables y Constantes" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 2, Name = "Tipos de Datos y Operadores" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 3, Order = 1, Name = "Instrucciones de Entrada y de Salida" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Estructuras de Control").Id, Week = 4, Order = 1, Name = "Estructuras de Control Selectivas: if-else" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Estructuras de Control").Id, Week = 5, Order = 1, Name = "Estructuras de Control Selectivas: switch" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Estructuras de Control").Id, Week = 6, Order = 1, Name = "Estructuras de Control Repetitivas: do-while" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Estructuras de Control").Id, Week = 7, Order = 1, Name = "Estructuras de Control Repetitivas: for" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Memoria Dinámica").Id, Week = 9, Order = 1, Name = "Operadores de Dirección e Indirección" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Memoria Dinámica").Id, Week = 10, Order = 1, Name = "Funciones con Parámetros por Referencia" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Arreglos").Id, Week = 12, Order = 1, Name = "Arreglos Unidimensionales" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Arreglos").Id, Week = 13, Order = 1, Name = "Métodos de Ordenamiento" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Arreglos").Id, Week = 14, Order = 1, Name = "Búsquedas" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-1" && cu.Name == "Arreglos").Id, Week = 15, Order = 1, Name = "Arreglos Bidimensionales" },

                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 1, Name = "Definición de un Algoritmo" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 2, Name = "Partes de un Programa" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 1, Name = "Variables y Constantes" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 2, Name = "Tipos de Datos y Operadores" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 3, Order = 1, Name = "Instrucciones de Entrada y de Salida" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Estructuras de Control").Id, Week = 4, Order = 1, Name = "Estructuras de Control Selectivas: if-else" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Estructuras de Control").Id, Week = 5, Order = 1, Name = "Estructuras de Control Selectivas: switch" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Estructuras de Control").Id, Week = 6, Order = 1, Name = "Estructuras de Control Repetitivas: do-while" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Estructuras de Control").Id, Week = 7, Order = 1, Name = "Estructuras de Control Repetitivas: for" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Memoria Dinámica").Id, Week = 9, Order = 1, Name = "Operadores de Dirección e Indirección" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Memoria Dinámica").Id, Week = 10, Order = 1, Name = "Funciones con Parámetros por Referencia" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Arreglos").Id, Week = 12, Order = 1, Name = "Arreglos Unidimensionales" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Arreglos").Id, Week = 13, Order = 1, Name = "Métodos de Ordenamiento" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Arreglos").Id, Week = 14, Order = 1, Name = "Búsquedas" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2019-2" && cu.Name == "Arreglos").Id, Week = 15, Order = 1, Name = "Arreglos Bidimensionales" },

                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 1, Name = "Definición de un Algoritmo" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 1, Order = 2, Name = "Partes de un Programa" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 1, Name = "Variables y Constantes" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 2, Order = 2, Name = "Tipos de Datos y Operadores" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Conceptos Básicos de Programación").Id, Week = 3, Order = 1, Name = "Instrucciones de Entrada y de Salida" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Estructuras de Control").Id, Week = 4, Order = 1, Name = "Estructuras de Control Selectivas: if-else" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Estructuras de Control").Id, Week = 5, Order = 1, Name = "Estructuras de Control Selectivas: switch" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Estructuras de Control").Id, Week = 6, Order = 1, Name = "Estructuras de Control Repetitivas: do-while" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Estructuras de Control").Id, Week = 7, Order = 1, Name = "Estructuras de Control Repetitivas: for" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Memoria Dinámica").Id, Week = 9, Order = 1, Name = "Operadores de Dirección e Indirección" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Memoria Dinámica").Id, Week = 10, Order = 1, Name = "Funciones con Parámetros por Referencia" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Arreglos").Id, Week = 12, Order = 1, Name = "Arreglos Unidimensionales" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Arreglos").Id, Week = 13, Order = 1, Name = "Métodos de Ordenamiento" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Arreglos").Id, Week = 14, Order = 1, Name = "Búsquedas" },
                new UnitActivity { CourseUnitId = courseUnits.First(cu => cu.CourseSyllabus.Course.Name == "Programación I" && cu.CourseSyllabus.Term.Name == "2020-1" && cu.Name == "Arreglos").Id, Week = 15, Order = 1, Name = "Arreglos Bidimensionales" },
            };
            return result.ToArray();
        }
    }
}
