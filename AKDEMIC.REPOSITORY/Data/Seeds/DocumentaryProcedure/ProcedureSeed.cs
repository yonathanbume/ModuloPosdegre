using System.Collections.Generic;
using System.Linq;
using AKDEMIC.CORE.Helpers;
using AKDEMIC.ENTITIES.Models.DocumentaryProcedure;

namespace AKDEMIC.REPOSITORY.Data.Seeds.DocumentaryProcedure
{
    public class ProcedureSeed
    {
        public static Procedure[] Seed(AkdemicContext context)
        {
            var classifiers = context.Classifiers.ToList();
            //var faculty = context.Faculties.ToList();
            var procedureCategories = context.ProcedureCategories.ToList();
            var procedureSubcategories = context.ProcedureSubcategories.ToList();

            var result = new List<Procedure>()
            {
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.ENROLLMENT_RESERVATION], Duration = 7, Score = 1, LegalBase = "Ley Universitaria Nro: 30220, Art° 39, 41, 42, 97 y 98\n\rEstatuto Nro: 43 al 54, 84, 86, 180, 290, 291 y 309\n\rReglamento General Nro: 101, 143, 144, 145, 147, 148, 485 y 486\n\rReglamento de Organización y Funciones y el MOF", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.ENROLLMENT_RESERVATION, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.ENROLLMENT_FEE], Duration = 1, Score = ConstantHelpers.PROCEDURES.STATIC_TYPE.ENROLLMENT_FEE, LegalBase = "", StaticType = 2, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.ENROLLMENT_RETIREMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.ENROLLMENT_RETIREMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.ENROLLMENT_RECTIFICATION], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.ENROLLMENT_RECTIFICATION, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.REGULAR_ENROLLMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.REGULAR_ENROLLMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.REGULAR_EXTEMPORANEOUS_ENROLLMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.REGULAR_EXTEMPORANEOUS_ENROLLMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.SPECIAL_ENROLLMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.SPECIAL_ENROLLMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.SUMMER_ENROLLMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.SUMMER_ENROLLMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.FAILED_COURSE_ENROLLMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.FAILED_COURSE_ENROLLMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.DIRECTED_COURSE_INSCRIPTION], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.DIRECTED_COURSE_INSCRIPTION, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.RECOVERY_COURSE_INSCRIPTION], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.RECOVERY_COURSE_INSCRIPTION, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.EXTRAORDINARY_EVALUATION], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.EXTRAORDINARY_EVALUATION, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.COMPUTER_SCIENCE_INSTITUTE_ENROLLMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.COMPUTER_SCIENCE_INSTITUTE_ENROLLMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.COMPUTER_SCIENCE_TECHNICAL_EDUCATION_MONTHLY_PAYMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.COMPUTER_SCIENCE_TECHNICAL_EDUCATION_MONTHLY_PAYMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.LANGUAGE_CENTER_INSTITUTE_ENROLLMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.LANGUAGE_CENTER_INSTITUTE_ENROLLMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.RESUMPTION_OF_STUDIES_APPLICATION], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.RESUMPTION_OF_STUDIES_APPLICATION, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.LANGUAGE_CENTER_INSTITUTE_MONTHLY_PAYMENT], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.LANGUAGE_CENTER_INSTITUTE_MONTHLY_PAYMENT, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_ENROLLMENT_CREDITS], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_ENROLLMENT_CREDITS, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_ENROLLMENT_WITH_CURRUCULUM_CHANGE], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_ENROLLMENT_WITH_CURRUCULUM_CHANGE, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_ENROLLMENT_WITHOUT_CURRUCULUM_CHANGE], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_ENROLLMENT_WITHOUT_CURRUCULUM_CHANGE, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_EXTEMPORANEOUS_ENROLLMENT_CREDITS], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_EXTEMPORANEOUS_ENROLLMENT_CREDITS, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_EXTEMPORANEOUS_ENROLLMENT_WITH_CURRUCULUM_CHANGE], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_EXTEMPORANEOUS_ENROLLMENT_WITH_CURRUCULUM_CHANGE, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_EXTEMPORANEOUS_ENROLLMENT_WITHOUT_CURRUCULUM_CHANGE], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.IRREGULAR_EXTEMPORANEOUS_ENROLLMENT_WITHOUT_CURRUCULUM_CHANGE, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.EXTERNAL_TRANSFER], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.EXTERNAL_TRANSFER, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.INTERNAL_TRANSFER], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.INTERNAL_TRANSFER, ClassifierId = classifiers[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.BACHELOR_REQUESTED], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.BACHELOR_REQUESTED, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[0].Id, ProcedureSubcategoryId = procedureSubcategories[0].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.TITLE_BY_TESIS], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.TITLE_BY_TESIS, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[0].Id, ProcedureSubcategoryId = procedureSubcategories[1].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.TITLE_BY_EXAM], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.TITLE_BY_EXAM, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[1].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.TITLE_BY_EXPERIENCE], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.TITLE_BY_EXPERIENCE, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[1].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.BACHELOR_DEGREE_APPLICATION], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.BACHELOR_DEGREE_APPLICATION, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[4].Id },
                new Procedure { Name = ConstantHelpers.PROCEDURES.STATIC_TYPE.VALUES[ConstantHelpers.PROCEDURES.STATIC_TYPE.TITLE_DEGREE_APPLICATION], Duration = 1, Score = 1, LegalBase = "", StaticType = ConstantHelpers.PROCEDURES.STATIC_TYPE.TITLE_DEGREE_APPLICATION, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[4].Id},

                new Procedure { Name = "Obtención automática del grado académico de bachiller", Duration = 60, Score = 1, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[0].Id, ProcedureSubcategoryId = procedureSubcategories[0].Id },
                //new Procedure { Name = "Analisis granulometrico por tamizado", Duration = 1, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[3].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[2].Id },
                //new Procedure { Name = "Compresion no confinada en suelos cohesivos (compresión simple)", Duration = 1, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[3].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[3].Id },
                //new Procedure { Name = "Abrasion por medio de la maquina de los angeles", Duration = 2, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[3].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[4].Id },
                //new Procedure { Name = "Lavado asfaltico + granulometria", Duration = 1, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[3].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[5].Id },
                //new Procedure { Name = "Densidad mediante el cono y la arena (cono 6)", Duration = 1, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[3].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[6].Id },
                //new Procedure { Name = "Compresion de concreto(minimo 3 probetas) c/u", Duration = 1, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[3].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[7].Id },
                //new Procedure { Name = "Absorcion", Duration = 1, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[3].Id, ProcedureCategoryId = procedureCategories[1].Id, ProcedureSubcategoryId = procedureSubcategories[8].Id },
                //new Procedure { Name = "Alineamiento de ejes de columna", Duration = 1, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[4].Id, ProcedureCategoryId = procedureCategories[3].Id },
                //new Procedure { Name = "Alineamiento y roscado a eje de turbina", Duration = 1, Score = 3, ClassifierId = classifiers[0].Id, FacultyId = faculty[4].Id, ProcedureCategoryId = procedureCategories[3].Id },                
                new Procedure { Name = "Declaración jurada de trámite único", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id },
                new Procedure { Name = "Recibo por derecho de expedito", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id },
                new Procedure { Name = "Recibo por derecho del grado de bachiller", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id },
                new Procedure { Name = "Recibo por derecho a diploma", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id },                
                new Procedure { Name = "Record Académico", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id },
                new Procedure { Name = "Certificado de estudios original", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id },
                new Procedure { Name = "Auditoria de notas - plan de estudios 2002", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id },
                new Procedure { Name = "Informe de no adeudar a la facultad", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[4].Id},
                new Procedure { Name = "Informe de no adeudar material didáctico", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[4].Id},
                new Procedure { Name = "Informe de no adeudar material deportivo", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[4].Id},
                new Procedure { Name = "Constancia de trámite único", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[4].Id},
                new Procedure { Name = "Informe académico de bachiller", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[4].Id},
                new Procedure { Name = "Obtención del grado de bachiller", Duration = 90, Score = 3, ClassifierId = classifiers[0].Id, ProcedureCategoryId = procedureCategories[4].Id , ProcedureSubcategoryId = procedureSubcategories[0].Id},
            };

            return result.ToArray();
        }
    }
}
